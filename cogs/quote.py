import discord
from discord.ext import commands
from discord import app_commands
from typing import Optional
import re

class randomquote(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    async def get_quote_id(self, table, id):
        connection = self.bot.quote_db
        cur = connection.cursor()
        try:
            quote = cur.execute(f"""
                SELECT *, ROWID FROM '{table}' WHERE ROWID = {id}
            """) 
        except:
            self.bot.quote_db = self.bot.connect_quote_db()
            return await self.get_quote_id(table, id)
        return quote.fetchone()

    async def get_random_quote_db(self, table):
        connection = self.bot.quote_db
        cur = connection.cursor()
        try:
            quote = cur.execute(f"""
                SELECT *, ROWID FROM '{table}' ORDER BY RANDOM() LIMIT 1
            """)
        except:
            self.bot.quote_db = self.bot.connect_quote_db()
            return await self.get_random_quote_db(table)
        return quote.fetchone()

    async def add_quote_db(self, table, author, quote):
        connection = self.bot.quote_db
        cur = connection.cursor()
        try:
            cur.execute(f"CREATE TABLE IF NOT EXISTS '{table}'(author, quote)")
            cur.execute(f"""
                INSERT INTO '{table}' VALUES
                    (?, ?)
                """, (author, quote))
        except:
            self.bot.quote_db = self.bot.connect_quote_db()
            return await self.add_quote_db(table, author, quote)
        connection.commit()
        return cur.lastrowid

    async def delete_quote_db(self, table, id):
        connection = self.bot.quote_db
        cur = connection.cursor()
        try:
            cur.execute(f"""
                DELETE FROM '{table}'
                WHERE ROWID = ?
                """, (id,))
        except:
            self.bot.quote_db = self.bot.connect_quote_db()
            return await self.delete_quote_db(table, id)
        connection.commit()

    @app_commands.command(name="random_quote", description="get random quote")
    async def quote(self,
    interaction: discord.Interaction,
    id: Optional[int]):
        if id:
            data = await self.get_quote_id(table=interaction.guild.id, id=id)
        else:
            data = await self.get_random_quote_db(table=interaction.guild.id)
        author = data[0]
        quote = data[1]
        await interaction.response.send_message(f'{quote}\n### `- {author} | id: {data[-1]}`', allowed_mentions=discord.AllowedMentions.none())

    @app_commands.command(name="addquote", description="add a quote")
    async def addquote(self, interaction: discord.Interaction, quote: str, by: str):
        if not interaction.user.guild_permissions.manage_messages:
            await interaction.response.send_message("u dont have manage message permission",ephemeral=True)
        else:
            await self.add_quote_db(table=interaction.guild.id, author=by, quote=quote)
            await interaction.response.send_message(f"added {quote} by {by}")

    @commands.Cog.listener()
    async def on_message(self, message):
        if message.content.lower() == "aq" or message.content == "<@949479338275913799>":
            messager = await message.channel.fetch_message(message.reference.message_id)
            for role in message.author.roles:
                if role.id == 1330210181187113051:
                    return await message.reply("erm you mighht been banned fom quoting idk")
            if messager.author == self.bot.user:
                if messager.content != "generated by deltafall-bot":
                    return
            if messager.content == "" and not messager.attachments: return await message.channel.send("its just an empty text you idiot", reference=message)
            content = messager.content
            display_content = content
            if len(messager.content) > 500: display_content = f'{messager.content[:500]}...'
            if messager.attachments:
                content = (f"{messager.content} | {messager.attachments[0].url}")
                display_content = (f"{display_content} | {messager.attachments[0].url}")
            quote_id = await self.add_quote_db(table=message.guild.id, author=messager.author.name, quote=content)
            embed=discord.Embed(title="Quote Added", description=f'{display_content}\n\nby {messager.author.name}', color=0x57e389)
            await message.channel.send(content=f"`id: {quote_id}`", embed=embed, reference=message)

        if message.content.lower() == "dq":
            messager = await message.channel.fetch_message(message.reference.message_id)
            if messager.author != self.bot.user:
                return
            content = messager.content
            id = re.findall("id:\s*(\d+)", content)[0]
            await self.delete_quote_db(table=message.guild.id, id=(id))
            embed=discord.Embed(title="Quote Deleted", description=f'Deleted quote id `{id}`', color=0x57e389)
            await message.channel.send(embed=embed, reference=message)

async def setup(bot):
    await bot.add_cog(randomquote(bot))
